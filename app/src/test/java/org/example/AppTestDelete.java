/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import io.restassured.RestAssured;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import static io.restassured.RestAssured.given;

public class AppTestDelete {

    @BeforeClass
    public void setUp() {
        RestAssured.baseURI = "https://dummyapi.io/data/v1";
        RestAssured.basePath = "/user";
    }

    @Test
    public void testDeleteUserValidAndRegistered() {
        given()
                .header("app-id", "662e0effbb70a725c32592e9")
                .pathParam("userId", "60d0fe4f5311236168a109cd") // User ID valid dan terdaftar
                .when()
                .delete("/{userId}")
                .then()
                .statusCode(200); // No Content
    }

    @Test
    public void testDeleteUserValidButNotRegistered() {
        given()
                .header("app-id", "662e0effbb70a725c32592e9")
                .pathParam("userId", "60d0fe4f5311236168a109d4") // User ID valid tapi tidak terdaftar
                .when()
                .delete("/{userId}")
                .then()
                .statusCode(404); // Not Found
    }

    @Test
    public void testDeleteUserInvalidFormat() {
        given()
                .header("app-id", "662e0effbb70a725c32592e9")
                .pathParam("userId", "60d0fe4f5") // Format User ID tidak valid
                .when()
                .delete("/{userId}")
                .then()
                .statusCode(400); // Bad Request
    }

    @Test
    public void testDeleteUserWithoutAppIdHeader() {
        given()
                .pathParam("userId", "60d0fe4f5311236168a109d4") // User ID valid dan terdaftar
                .when()
                .delete("/{userId}")
                .then()
                .statusCode(403); // Unauthorized
    }

    @Test
    public void testDeleteUserWithInvalidAppIdHeader() {
        given()
                .header("app-id", "662e0effbb70a725c3259220")
                .pathParam("userId", "60d0fe4f5311236168a109d4") // User ID valid dan terdaftar
                .when()
                .delete("/{userId}")
                .then()
                .statusCode(403); // Unauthorized
    }
}
